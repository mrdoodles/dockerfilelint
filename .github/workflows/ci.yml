name: CI

on:
  push:
    branches:
      - "main"

  pull_request:
    branches:
      - "main"

jobs:
  validate-code:
    # if: github.event_name == 'pull_request'
    timeout-minutes: 3
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      # - name: Verify with commitlint
      #   uses: wagoid/commitlint-github-action@v4.1.9
      #   with:
      #     configFile: ".github/configs/commitlintrc.yml"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ env.cache-name }}-

      - name: Cache coverage
        uses: actions/cache@v2
        with:
          path: coverage.lcov
          key: ${{ runner.os }}-coverage-

      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "16.x"
      - run: yarn
      - run: yarn format:check
      - run: yarn test
      - run: yarn coverage
        env:
          CI: true

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          path: coverage.lcov
          name: code-coverage

      - name: Open Issue
        if: failure()
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.CUSTOM_ACTIONS_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Workflow failure for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_.",
            "assignees": ["${{ github.event.pull_request.user.login }}"]
            }' \
          --fail

  build-and-push:
    if: github.event_name == 'push'
    needs: ["validate-code"]
    timeout-minutes: 7
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: write
    env:
      DOCKER_USERNAME: mrdoodles
      DOCKER_REPOSITORY: dockerfilelint
      GITHUB_TOKEN: ${{ secrets.CUSTOM_ACTIONS_TOKEN }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v2.4.0

      - name: Update version
        if: ${{ event.name == 'pull_request'}}
        id: bumper
        uses: tomerfi/version-bumper-action@1.1.2
        with:
          changelog: true
          preset: conventionalcommits
          folder: ./

      - name: Update package version
        uses: HarmvZ/set-package-json-version-action
        with:
          version: ${{ steps.release.outputs.version }}

      # - name: Cache node modules
      #   uses: actions/cache@v2
      #   env:
      #     cache-name: cache-node-modules
      #   with:
      #     path: ~/.npm
      #     key: ${{ runner.os }}-node-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-node-${{ env.cache-name }}-

      # - name: Use NodeJS
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "16.x"
      # - run: yarn
      # - run: yarn coverage
      #   env:
      #     CI: true

      - name: Cache coverage
        uses: actions/cache@v2
        with:
          path: coverage.lcov
          restore-keys: |
            ${{ runner.os }}-coverage-

      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          path: coverage.lcov
          name: code-coverage

      - uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.lcov
          fail_ci_if_error: true

      # - name: Zip Assets
      #   run: |
      #     zip -r build.zip ./build
      ##    zip -r coverage.zip ./coverage

      # - name: Automatic GitHub Release
      #   uses: justincy/github-action-npm-release@2.0.1
      #   id: release

      # - uses: actions/setup-node@v1
      #   if: steps.release.outputs.released == 'true'
      #   with:
      #     registry-url: 'https://npm.pkg.github.com'
      # - name: Publish
      #   if: steps.release.outputs.released == 'true'
      #   run: npm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # - name: Create Release
      #   run: npx semantic-release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.CUSTOM_ACTIONS_TOKEN }}

      # - name: Release
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.CUSTOM_ACTIONS_TOKEN }}
      #   uses: ridedott/release-me-action@master
      #   with:
      #     dry-run: false
      #     release-branches: '["main"]'
      #     node-module: true
      #     commit-assets: |
      #       ./coverage/*

      - name: Update package version
        uses: HarmvZ/set-package-json-version-action
        with:
          version: ${{ steps.release.outputs.version }}

      - name: Build an image from main Dockerfile
        run: |
          docker build -t theimage .

      # - name: Build and tag the Docker image
      #   if: steps.release.outputs.released == 'true'
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: Dockerfile
      #     push: false
      #     tags: |
      #       ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.release.outputs.version }}
      #       ${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest

      - name: Trivy scan builder Dockerfile
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: theimage
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "MEDIUM,CRITICAL,HIGH"

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Tag release
        run: |
          docker tag theimage docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.new_version }}

      - name: Update major tag
        run: |
          docker tag theimage docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.major_part }}

      - name: Update minor tag
        run: |
          docker tag theimage docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.major_part }}.${{ steps.bumper.outputs.minor_part }}

      - name: Update latest tag
        run: |
          docker tag theimage docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest

      - name: Push release
        uses: actions-hub/docker@master
        with:
          args: push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.new_version }}

      - name: Push major tag
        uses: actions-hub/docker@master
        with:
          args: push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.major_part }}

      - name: Push minor tag
        uses: actions-hub/docker@master
        with:
          args: push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:${{ steps.bumper.outputs.major_part }}.${{ steps.bumper.outputs.minor_part }}

      - name: Push latest tag
        uses: actions-hub/docker@master
        with:
          args: push docker.io/${{ env.DOCKER_USERNAME }}/${{ env.DOCKER_REPOSITORY }}:latest

      ## CREATE THE RELEASE HERE

      # - name: Zip Assets
      #   run: |
      #     zip -r src.zip ./src

      # - name: Upload Source
      #   uses: actions/upload-artifact@v1
      #   with:
      #     path: src.zip
      #     name: Source Code

      - name: Upload CI Workflow
        uses: actions/upload-artifact@v1
        with:
          path: .github/workflows/ci.yml
          name: Workflow Yaml

      - name: Upload Changelog
        uses: actions/upload-artifact@v1
        with:
          path: changelog-${{ steps.bumper.outputs.new_version }}.md
          name: Changelog

    #### ON SUCCESS
    # ===============

    ## KICK OFF THE ACTION BUILD WITH THE RELEASE VERSION HERE

    ## SEND SUCCESS SLACK NOTIFICATION HERE

    #### ON FAIL
    # ===============

    ## SEND THE SLACK FAILURE NOTIFICATION HERE

    ## CREATE THE ISSUE HERE
